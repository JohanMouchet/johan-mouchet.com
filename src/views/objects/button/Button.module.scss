@use "sass:map";
@use "sass:color";
@import "@/assets/styles/settings/settings.module";
@import "@/assets/styles/tools/tools.module";

$class: o-button;

.#{$class} {
  $height: t-vertical-rhythm(1.75) !default;
  $border-width: 2px !default;
  $h-padding: $height / 1.75;

  /**
	 * Btn Padding (private)
	 *
	 * Set button vertical padding to match given button height in order to match inputs height.
	 *
	 * @param {number} [btn-scale-factor = 1] - Increase / decrease factor
	 */
  @mixin btn-padding($btn-scale-factor: 1) {
    @if $height > $s-line-height-base {
      padding: ($height - $s-line-height-base) /
        2 *
        $btn-scale-factor
        $h-padding *
        $btn-scale-factor; // Fallback

      padding: calc(
          #{($height - $s-line-height-base) /
            2 *
            $btn-scale-factor} -
            #{$border-width}
        )
        $h-padding *
        $btn-scale-factor;
    } @else {
      padding: 0 $h-padding;
    }
  }

  @include btn-padding;

  display: inline-block;
  font-family: $s-font-family-sans;
  font-size: t-modular-scale(0);
  line-height: $s-line-height-base;
  color: $s-color-link;
  text-align: center;
  text-decoration: none;
  vertical-align: middle;
  cursor: pointer;
  background: none;
  border: $border-width solid $s-color-link;
  border-radius: 0;
  transition: color 0.2s, background 0.2s, border-color 0.2s,
    transform 0.1s ease-out;

  @include t-wekkit-hdpi-small-dimension;

  &:hover,
  &:focus {
    color: $s-color-white;
    text-decoration: none;
    background-color: $s-color-link;
    border-color: $s-color-link;
  }

  &:active {
    color: $s-color-white;
    background-color: $s-color-link-active;
    border-color: $s-color-link-active;
    transform: translateY(2px);
  }

  &:focus {
    outline: none;
  }

  /** Primary **/
  &--primary {
    color: $s-color-white;
    background-color: $s-color-link;
    border-color: $s-color-link;

    &:hover,
    &:focus {
      color: $s-color-link;
      background-color: transparent;
      border-color: $s-color-link;
    }

    &:active {
      color: $s-color-link-active;
      background-color: transparent;
      border-color: $s-color-link-active;
    }
  }

  /** Secondary **/
  &--secondary {
    color: $s-color-text-dimmed;
    border-color: $s-color-text-dimmed;

    &:hover,
    &:focus {
      color: $s-color-white;
      background-color: $s-color-text-dimmed;
      border-color: $s-color-text-dimmed;
    }

    &:active {
      color: $s-color-white;
      background-color: color.adjust($s-color-text-dimmed, $lightness: -10%);
      border-color: color.adjust($s-color-text-dimmed, $lightness: -10%);
    }
  }

  /** LinkedIn **/
  &--linkedin {
    /* stylelint-disable-next-line color-no-hex */
    $color-linkedin: #0077b5;

    color: $s-color-white;
    background-color: $color-linkedin;
    border-color: $color-linkedin;

    &:hover,
    &:focus {
      color: $color-linkedin;
      background-color: transparent;
      border-color: $color-linkedin;
    }

    &:active {
      color: color.scale($color-linkedin, $lightness: -15%);
      background-color: transparent;
      border-color: color.scale($color-linkedin, $lightness: -15%);
    }
  }

  /** Disabled **/
  &[disabled] {
    color: $s-color-gray-darker;
    pointer-events: none;
    cursor: default;
    user-select: none;
    background-color: $s-color-gray-lighter;
    border-color: currentcolor;

    &:active {
      transform: none;
    }
  }

  /** Small **/
  &--sm {
    @include btn-padding(0.5);
  }

  /** Large **/
  &--lg {
    @include btn-padding(1.5);
  }

  /** Full width **/
  &--block {
    width: 100%;
  }

  @media (max-width: map.get($s-breakpoints, sm)) {
    @at-root .sm\:#{$class}--block {
      width: 100%;
    }
  }

  @media (max-width: map.get($s-breakpoints, md)) {
    @at-root .md\:#{$class}--block {
      width: 100%;
    }
  }
}
